// This file is part of the Cornell University Hardware GPS Receiver Project.
// Copyright (C) 2009 - Adam Shapiro (ams348@cornell.edu)
//                      Tom Chatt (tjc42@cornell.edu)
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA

#include !"tracking_loops.csv"

//Square root input
SQRT_INPUT_WIDTH,I2Q2_WIDTH_TRACK,Bit width of sqrt_fixed argument.
SQRT_INPUT_RANGE,range(SQRT_INPUT_WIDTH),Bit range of sqrt_fixed argument.

//Input pad
SQRT_INPUT_PAD,SQRT_INPUT_WIDTH%2,Padding amount to make the input width an even number (0 if SQRT_INPUT_WIDTH is odd, 1 if SQRT_INPUT_WIDTH is even).
SQRT_INPUT_PADDED_WIDTH,SQRT_INPUT_WIDTH+SQRT_INPUT_PAD,Padded input width.
SQRT_INPUT_PADDED_RANGE,range(SQRT_INPUT_PADDED_WIDTH),Bit range of padded sqrt_fixed argument.

//Square root output
SQRT_OUTPUT_WIDTH,ceil(SQRT_INPUT_PADDED_WIDTH/2),Bit width of output.
SQRT_OUTPUT_RANGE,SQRT_OUTPUT_WIDTH-1:0,Bit range of output.

//Square root shift
SQRT_SHIFT,SQRT_INPUT_PADDED_WIDTH-2,Shift amount.
SQRT_SHIFT_DIV_BY_2,ceil(SQRT_SHIFT/2),Shift amount / 2.

//Square root loop counter
SQRT_LOOPCOUNTER_WIDTH,max_width(SQRT_INPUT_PADDED_WIDTH)+1,Bit width of loop counter.
SQRT_LOOPCOUNTER_RANGE,SQRT_LOOPCOUNTER_WIDTH-1:0,Bit range of loop counter.
SQRT_LOOPCOUNTER_MAX_VALUE,SQRT_LOOPCOUNTER_WIDTH'dSQRT_SHIFT*2+1+1+1,Value to which the loop counter is reset before each full sqrt computation.
SQRT_LOOPCOUNTER_MAX_VALUE_M1,SQRT_LOOPCOUNTER_WIDTH'dSQRT_LOOPCOUNTER_MAX_VALUE-1,(Value to which the loop counter is reset before each full sqrt compilation) - 1.


//Misc
SQRT_WIDTH_M_SHIFT,SQRT_INPUT_PADDED_WIDTH-SQRT_SHIFT,Difference between width and shift amount.
SQRT_ROOT_WIDTH,SQRT_INPUT_PADDED_WIDTH,Bit width of root variable in sqrt computation.
SQRT_ROOT_RANGE,SQRT_ROOT_WIDTH-1:0,Bit range of root variable in sqrt computation.
SQRT_REM_WIDTH,SQRT_INPUT_PADDED_WIDTH/2+2,Bit width of remainder variable in sqrt computation.
SQRT_REM_RANGE,SQRT_REM_WIDTH-1:0,Bit range of remainder variable in sqrt computation.
SQRT_DIVISOR_WIDTH,SQRT_INPUT_PADDED_WIDTH,Bit width of divisor variable in sqrt computation.
SQRT_DIVISOR_RANGE,SQRT_DIVISOR_WIDTH-1:0,Bit range of divisor variable in sqrt computation.
