// megafunction wizard: %LPM_DIVIDE%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: lpm_divide 

// ============================================================
// File Name: divider.v
// Megafunction Name(s):
// 			lpm_divide
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 9.0 Build 184 04/29/2009 SP 1 SJ Web Edition
// ************************************************************


//Copyright (C) 1991-2009 Altera Corporation
//Your use of Altera Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Altera Program License 
//Subscription Agreement, Altera MegaCore Function License 
//Agreement, or other applicable license agreement, including, 
//without limitation, that your use is for the sole purpose of 
//programming logic devices manufactured by Altera and sold by 
//Altera or its authorized distributors.  Please refer to the 
//applicable agreement for further details.


//lpm_divide DEVICE_FAMILY="Cyclone II" LPM_DREPRESENTATION="UNSIGNED" LPM_NREPRESENTATION="UNSIGNED" LPM_PIPELINE=2 LPM_REMAINDERPOSITIVE="TRUE" LPM_WIDTHD=14 LPM_WIDTHN=26 MAXIMIZE_SPEED=6 clock denom numer quotient remain
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_abs 2008:05:19:10:51:43:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_divide 2008:05:21:18:11:28:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//sign_div_unsign DEN_REPRESENTATION="UNSIGNED" DEN_WIDTH=14 LPM_PIPELINE=2 MAXIMIZE_SPEED=6 NUM_REPRESENTATION="UNSIGNED" NUM_WIDTH=26 SKIP_BITS=0 clock denominator numerator quotient remainder
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_abs 2008:05:19:10:51:43:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_divide 2008:05:21:18:11:28:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


//alt_u_div DEVICE_FAMILY="Cyclone II" LPM_PIPELINE=2 MAXIMIZE_SPEED=6 SKIP_BITS=0 WIDTH_D=14 WIDTH_N=26 WIDTH_Q=26 WIDTH_R=14 clock denominator numerator quotient remainder
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_abs 2008:05:19:10:51:43:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_lpm_divide 2008:05:21:18:11:28:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ cbx_util_mgl 2008:11:21:14:58:47:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=1 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  divider_add_sub
	( 
	cout,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	output   cout;
	input   [0:0]  dataa;
	input   [0:0]  datab;
	output   [0:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [0:0]  dataa;
	tri0   [0:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [0:0]  carry_eqn;
	wire  cin_wire;
	wire  [0:0]  datab_node;
	wire  [0:0]  sum_eqn;

	assign
		carry_eqn = {((dataa[0] & datab_node[0]) | ((dataa[0] | datab_node[0]) & cin_wire))},
		cin_wire = 1'b1,
		cout = carry_eqn[0],
		datab_node = (~ datab),
		result = sum_eqn,
		sum_eqn = {((dataa[0] ^ datab_node[0]) ^ cin_wire)};
endmodule //divider_add_sub


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=2 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END

//synthesis_resources = 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  divider_add_sub1
	( 
	cout,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	output   cout;
	input   [1:0]  dataa;
	input   [1:0]  datab;
	output   [1:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   [1:0]  dataa;
	tri0   [1:0]  datab;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [1:0]  carry_eqn;
	wire  cin_wire;
	wire  [1:0]  datab_node;
	wire  [1:0]  sum_eqn;

	assign
		carry_eqn = {((dataa[1] & datab_node[1]) | ((dataa[1] | datab_node[1]) & carry_eqn[0])), ((dataa[0] & datab_node[0]) | ((dataa[0] | datab_node[0]) & cin_wire))},
		cin_wire = 1'b1,
		cout = carry_eqn[1],
		datab_node = (~ datab),
		result = sum_eqn,
		sum_eqn = {((dataa[1] ^ datab_node[1]) ^ carry_eqn[0]), ((dataa[0] ^ datab_node[0]) ^ cin_wire)};
endmodule //divider_add_sub1


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=11 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=12 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=13 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=14 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=3 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=15 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=4 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=5 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=6 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=7 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=8 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=9 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


//lpm_add_sub DEVICE_FAMILY="Cyclone II" LPM_DIRECTION="SUB" LPM_WIDTH=10 cout dataa datab result
//VERSION_BEGIN 9.0SP1 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:02:26:16:06:21:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END

//synthesis_resources = lut 306 reg 162 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
(* ALTERA_ATTRIBUTE = {"{-to DFFQuotient[0]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[1]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[2]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[3]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[4]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[5]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[6]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[7]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[8]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[9]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[10]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[11]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[12]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[13]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[14]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[15]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[16]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[17]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[18]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[19]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[20]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[21]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[22]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[23]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[24]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[25]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[26]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[27]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[28]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[29]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[30]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[31]} POWER_UP_LEVEL=HIGH;{-to DFFQuotient[32]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[33]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[34]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[35]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[36]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[37]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[38]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[39]} POWER_UP_LEVEL=LOW;",
		"{-to DFFQuotient[40]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[41]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[42]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[43]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[44]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[45]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[46]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[47]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[48]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[49]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[50]} POWER_UP_LEVEL=LOW;{-to DFFQuotient[51]} POWER_UP_LEVEL=LOW"} *)
module  divider_alt_u_div
	( 
	clock,
	denominator,
	numerator,
	quotient,
	remainder) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [13:0]  denominator;
	input   [25:0]  numerator;
	output   [25:0]  quotient;
	output   [13:0]  remainder;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=HIGH"} *)
	reg	[27:0]	DFFDenominator;
	reg	[51:0]	DFFNumerator;
	wire	[51:0]	wire_DFFQuotient_d;
	reg	[51:0]	DFFQuotient;
	reg	[29:0]	DFFStage;
	wire  wire_add_sub_0_cout;
	wire  [0:0]   wire_add_sub_0_result;
	wire  wire_add_sub_1_cout;
	wire  [1:0]   wire_add_sub_1_result;
	wire	[11:0]	wire_add_sub_10_result_int;
	wire	wire_add_sub_10_cout;
	wire	[10:0]	wire_add_sub_10_dataa;
	wire	[10:0]	wire_add_sub_10_datab;
	wire	[10:0]	wire_add_sub_10_result;
	wire	[12:0]	wire_add_sub_11_result_int;
	wire	wire_add_sub_11_cout;
	wire	[11:0]	wire_add_sub_11_dataa;
	wire	[11:0]	wire_add_sub_11_datab;
	wire	[11:0]	wire_add_sub_11_result;
	wire	[13:0]	wire_add_sub_12_result_int;
	wire	wire_add_sub_12_cout;
	wire	[12:0]	wire_add_sub_12_dataa;
	wire	[12:0]	wire_add_sub_12_datab;
	wire	[12:0]	wire_add_sub_12_result;
	wire	[14:0]	wire_add_sub_13_result_int;
	wire	wire_add_sub_13_cout;
	wire	[13:0]	wire_add_sub_13_dataa;
	wire	[13:0]	wire_add_sub_13_datab;
	wire	[13:0]	wire_add_sub_13_result;
	wire	[15:0]	wire_add_sub_14_result_int;
	wire	wire_add_sub_14_cout;
	wire	[14:0]	wire_add_sub_14_dataa;
	wire	[14:0]	wire_add_sub_14_datab;
	wire	[14:0]	wire_add_sub_14_result;
	wire	[15:0]	wire_add_sub_15_result_int;
	wire	wire_add_sub_15_cout;
	wire	[14:0]	wire_add_sub_15_dataa;
	wire	[14:0]	wire_add_sub_15_datab;
	wire	[14:0]	wire_add_sub_15_result;
	wire	[15:0]	wire_add_sub_16_result_int;
	wire	wire_add_sub_16_cout;
	wire	[14:0]	wire_add_sub_16_dataa;
	wire	[14:0]	wire_add_sub_16_datab;
	wire	[14:0]	wire_add_sub_16_result;
	wire	[15:0]	wire_add_sub_17_result_int;
	wire	wire_add_sub_17_cout;
	wire	[14:0]	wire_add_sub_17_dataa;
	wire	[14:0]	wire_add_sub_17_datab;
	wire	[14:0]	wire_add_sub_17_result;
	wire	[15:0]	wire_add_sub_18_result_int;
	wire	wire_add_sub_18_cout;
	wire	[14:0]	wire_add_sub_18_dataa;
	wire	[14:0]	wire_add_sub_18_datab;
	wire	[14:0]	wire_add_sub_18_result;
	wire	[15:0]	wire_add_sub_19_result_int;
	wire	wire_add_sub_19_cout;
	wire	[14:0]	wire_add_sub_19_dataa;
	wire	[14:0]	wire_add_sub_19_datab;
	wire	[14:0]	wire_add_sub_19_result;
	wire	[3:0]	wire_add_sub_2_result_int;
	wire	wire_add_sub_2_cout;
	wire	[2:0]	wire_add_sub_2_dataa;
	wire	[2:0]	wire_add_sub_2_datab;
	wire	[2:0]	wire_add_sub_2_result;
	wire	[15:0]	wire_add_sub_20_result_int;
	wire	wire_add_sub_20_cout;
	wire	[14:0]	wire_add_sub_20_dataa;
	wire	[14:0]	wire_add_sub_20_datab;
	wire	[14:0]	wire_add_sub_20_result;
	wire	[15:0]	wire_add_sub_21_result_int;
	wire	wire_add_sub_21_cout;
	wire	[14:0]	wire_add_sub_21_dataa;
	wire	[14:0]	wire_add_sub_21_datab;
	wire	[14:0]	wire_add_sub_21_result;
	wire	[15:0]	wire_add_sub_22_result_int;
	wire	wire_add_sub_22_cout;
	wire	[14:0]	wire_add_sub_22_dataa;
	wire	[14:0]	wire_add_sub_22_datab;
	wire	[14:0]	wire_add_sub_22_result;
	wire	[15:0]	wire_add_sub_23_result_int;
	wire	wire_add_sub_23_cout;
	wire	[14:0]	wire_add_sub_23_dataa;
	wire	[14:0]	wire_add_sub_23_datab;
	wire	[14:0]	wire_add_sub_23_result;
	wire	[15:0]	wire_add_sub_24_result_int;
	wire	wire_add_sub_24_cout;
	wire	[14:0]	wire_add_sub_24_dataa;
	wire	[14:0]	wire_add_sub_24_datab;
	wire	[14:0]	wire_add_sub_24_result;
	wire	[15:0]	wire_add_sub_25_result_int;
	wire	wire_add_sub_25_cout;
	wire	[14:0]	wire_add_sub_25_dataa;
	wire	[14:0]	wire_add_sub_25_datab;
	wire	[14:0]	wire_add_sub_25_result;
	wire	[4:0]	wire_add_sub_3_result_int;
	wire	wire_add_sub_3_cout;
	wire	[3:0]	wire_add_sub_3_dataa;
	wire	[3:0]	wire_add_sub_3_datab;
	wire	[3:0]	wire_add_sub_3_result;
	wire	[5:0]	wire_add_sub_4_result_int;
	wire	wire_add_sub_4_cout;
	wire	[4:0]	wire_add_sub_4_dataa;
	wire	[4:0]	wire_add_sub_4_datab;
	wire	[4:0]	wire_add_sub_4_result;
	wire	[6:0]	wire_add_sub_5_result_int;
	wire	wire_add_sub_5_cout;
	wire	[5:0]	wire_add_sub_5_dataa;
	wire	[5:0]	wire_add_sub_5_datab;
	wire	[5:0]	wire_add_sub_5_result;
	wire	[7:0]	wire_add_sub_6_result_int;
	wire	wire_add_sub_6_cout;
	wire	[6:0]	wire_add_sub_6_dataa;
	wire	[6:0]	wire_add_sub_6_datab;
	wire	[6:0]	wire_add_sub_6_result;
	wire	[8:0]	wire_add_sub_7_result_int;
	wire	wire_add_sub_7_cout;
	wire	[7:0]	wire_add_sub_7_dataa;
	wire	[7:0]	wire_add_sub_7_datab;
	wire	[7:0]	wire_add_sub_7_result;
	wire	[9:0]	wire_add_sub_8_result_int;
	wire	wire_add_sub_8_cout;
	wire	[8:0]	wire_add_sub_8_dataa;
	wire	[8:0]	wire_add_sub_8_datab;
	wire	[8:0]	wire_add_sub_8_result;
	wire	[10:0]	wire_add_sub_9_result_int;
	wire	wire_add_sub_9_cout;
	wire	[9:0]	wire_add_sub_9_dataa;
	wire	[9:0]	wire_add_sub_9_datab;
	wire	[9:0]	wire_add_sub_9_result;
	wire aclr;
	wire clk_en;
	wire  [404:0]  DenominatorIn;
	wire  [404:0]  DenominatorIn_tmp;
	wire  gnd_wire;
	wire  [701:0]  nose;
	wire  [701:0]  NumeratorIn;
	wire  [701:0]  NumeratorIn_tmp;
	wire  [389:0]  prestg;
	wire  [25:0]  quotient_tmp;
	wire  [377:0]  sel;
	wire  [701:0]  selnose;
	wire  [404:0]  StageIn;
	wire  [404:0]  StageIn_tmp;
	wire  [389:0]  StageOut;
	wire  vcc_wire;

	// synopsys translate_off
	initial
		DFFDenominator = {28{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFDenominator <= {28{1'b1}};
		else if  (clk_en == 1'b1)   DFFDenominator <= {DFFDenominator[13:0], denominator};
	// synopsys translate_off
	initial
		DFFNumerator = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFNumerator <= 52'b0;
		else if  (clk_en == 1'b1)   DFFNumerator <= {DFFNumerator[25:0], numerator};
	// synopsys translate_off
	initial
		DFFQuotient[0:0] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[0:0] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[0:0] <= wire_DFFQuotient_d[0:0];
	// synopsys translate_off
	initial
		DFFQuotient[1:1] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[1:1] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[1:1] <= wire_DFFQuotient_d[1:1];
	// synopsys translate_off
	initial
		DFFQuotient[2:2] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[2:2] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[2:2] <= wire_DFFQuotient_d[2:2];
	// synopsys translate_off
	initial
		DFFQuotient[3:3] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[3:3] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[3:3] <= wire_DFFQuotient_d[3:3];
	// synopsys translate_off
	initial
		DFFQuotient[4:4] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[4:4] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[4:4] <= wire_DFFQuotient_d[4:4];
	// synopsys translate_off
	initial
		DFFQuotient[5:5] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[5:5] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[5:5] <= wire_DFFQuotient_d[5:5];
	// synopsys translate_off
	initial
		DFFQuotient[6:6] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[6:6] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[6:6] <= wire_DFFQuotient_d[6:6];
	// synopsys translate_off
	initial
		DFFQuotient[7:7] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[7:7] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[7:7] <= wire_DFFQuotient_d[7:7];
	// synopsys translate_off
	initial
		DFFQuotient[8:8] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[8:8] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[8:8] <= wire_DFFQuotient_d[8:8];
	// synopsys translate_off
	initial
		DFFQuotient[9:9] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[9:9] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[9:9] <= wire_DFFQuotient_d[9:9];
	// synopsys translate_off
	initial
		DFFQuotient[10:10] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[10:10] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[10:10] <= wire_DFFQuotient_d[10:10];
	// synopsys translate_off
	initial
		DFFQuotient[11:11] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[11:11] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[11:11] <= wire_DFFQuotient_d[11:11];
	// synopsys translate_off
	initial
		DFFQuotient[12:12] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[12:12] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[12:12] <= wire_DFFQuotient_d[12:12];
	// synopsys translate_off
	initial
		DFFQuotient[13:13] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[13:13] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[13:13] <= wire_DFFQuotient_d[13:13];
	// synopsys translate_off
	initial
		DFFQuotient[14:14] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[14:14] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[14:14] <= wire_DFFQuotient_d[14:14];
	// synopsys translate_off
	initial
		DFFQuotient[15:15] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[15:15] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[15:15] <= wire_DFFQuotient_d[15:15];
	// synopsys translate_off
	initial
		DFFQuotient[16:16] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[16:16] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[16:16] <= wire_DFFQuotient_d[16:16];
	// synopsys translate_off
	initial
		DFFQuotient[17:17] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[17:17] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[17:17] <= wire_DFFQuotient_d[17:17];
	// synopsys translate_off
	initial
		DFFQuotient[18:18] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[18:18] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[18:18] <= wire_DFFQuotient_d[18:18];
	// synopsys translate_off
	initial
		DFFQuotient[19:19] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[19:19] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[19:19] <= wire_DFFQuotient_d[19:19];
	// synopsys translate_off
	initial
		DFFQuotient[20:20] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[20:20] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[20:20] <= wire_DFFQuotient_d[20:20];
	// synopsys translate_off
	initial
		DFFQuotient[21:21] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[21:21] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[21:21] <= wire_DFFQuotient_d[21:21];
	// synopsys translate_off
	initial
		DFFQuotient[22:22] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[22:22] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[22:22] <= wire_DFFQuotient_d[22:22];
	// synopsys translate_off
	initial
		DFFQuotient[23:23] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[23:23] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[23:23] <= wire_DFFQuotient_d[23:23];
	// synopsys translate_off
	initial
		DFFQuotient[24:24] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[24:24] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[24:24] <= wire_DFFQuotient_d[24:24];
	// synopsys translate_off
	initial
		DFFQuotient[25:25] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[25:25] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[25:25] <= wire_DFFQuotient_d[25:25];
	// synopsys translate_off
	initial
		DFFQuotient[26:26] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[26:26] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[26:26] <= wire_DFFQuotient_d[26:26];
	// synopsys translate_off
	initial
		DFFQuotient[27:27] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[27:27] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[27:27] <= wire_DFFQuotient_d[27:27];
	// synopsys translate_off
	initial
		DFFQuotient[28:28] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[28:28] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[28:28] <= wire_DFFQuotient_d[28:28];
	// synopsys translate_off
	initial
		DFFQuotient[29:29] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[29:29] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[29:29] <= wire_DFFQuotient_d[29:29];
	// synopsys translate_off
	initial
		DFFQuotient[30:30] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[30:30] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[30:30] <= wire_DFFQuotient_d[30:30];
	// synopsys translate_off
	initial
		DFFQuotient[31:31] = {1{1'b1}};
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[31:31] <= {1{1'b1}};
		else if  (clk_en == 1'b1)   DFFQuotient[31:31] <= wire_DFFQuotient_d[31:31];
	// synopsys translate_off
	initial
		DFFQuotient[32:32] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[32:32] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[32:32] <= wire_DFFQuotient_d[32:32];
	// synopsys translate_off
	initial
		DFFQuotient[33:33] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[33:33] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[33:33] <= wire_DFFQuotient_d[33:33];
	// synopsys translate_off
	initial
		DFFQuotient[34:34] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[34:34] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[34:34] <= wire_DFFQuotient_d[34:34];
	// synopsys translate_off
	initial
		DFFQuotient[35:35] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[35:35] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[35:35] <= wire_DFFQuotient_d[35:35];
	// synopsys translate_off
	initial
		DFFQuotient[36:36] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[36:36] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[36:36] <= wire_DFFQuotient_d[36:36];
	// synopsys translate_off
	initial
		DFFQuotient[37:37] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[37:37] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[37:37] <= wire_DFFQuotient_d[37:37];
	// synopsys translate_off
	initial
		DFFQuotient[38:38] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[38:38] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[38:38] <= wire_DFFQuotient_d[38:38];
	// synopsys translate_off
	initial
		DFFQuotient[39:39] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[39:39] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[39:39] <= wire_DFFQuotient_d[39:39];
	// synopsys translate_off
	initial
		DFFQuotient[40:40] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[40:40] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[40:40] <= wire_DFFQuotient_d[40:40];
	// synopsys translate_off
	initial
		DFFQuotient[41:41] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[41:41] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[41:41] <= wire_DFFQuotient_d[41:41];
	// synopsys translate_off
	initial
		DFFQuotient[42:42] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[42:42] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[42:42] <= wire_DFFQuotient_d[42:42];
	// synopsys translate_off
	initial
		DFFQuotient[43:43] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[43:43] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[43:43] <= wire_DFFQuotient_d[43:43];
	// synopsys translate_off
	initial
		DFFQuotient[44:44] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[44:44] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[44:44] <= wire_DFFQuotient_d[44:44];
	// synopsys translate_off
	initial
		DFFQuotient[45:45] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[45:45] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[45:45] <= wire_DFFQuotient_d[45:45];
	// synopsys translate_off
	initial
		DFFQuotient[46:46] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[46:46] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[46:46] <= wire_DFFQuotient_d[46:46];
	// synopsys translate_off
	initial
		DFFQuotient[47:47] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[47:47] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[47:47] <= wire_DFFQuotient_d[47:47];
	// synopsys translate_off
	initial
		DFFQuotient[48:48] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[48:48] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[48:48] <= wire_DFFQuotient_d[48:48];
	// synopsys translate_off
	initial
		DFFQuotient[49:49] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[49:49] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[49:49] <= wire_DFFQuotient_d[49:49];
	// synopsys translate_off
	initial
		DFFQuotient[50:50] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[50:50] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[50:50] <= wire_DFFQuotient_d[50:50];
	// synopsys translate_off
	initial
		DFFQuotient[51:51] = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFQuotient[51:51] <= 1'b0;
		else if  (clk_en == 1'b1)   DFFQuotient[51:51] <= wire_DFFQuotient_d[51:51];
	assign
		wire_DFFQuotient_d = {DFFQuotient[25:19], (~ selnose[189]), (~ selnose[216]), (~ selnose[243]), (~ selnose[270]), (~ selnose[297]), (~ selnose[324]), (~ selnose[351]), (~ selnose[378]), (~ selnose[405]), (~ selnose[432]), (~ selnose[459]), (~ selnose[486]), (~ selnose[513]), {6{vcc_wire}}, (~ selnose[0]), (~ selnose[27]), (~ selnose[54]), (~ selnose[81]), (~ selnose[108]), (~ selnose[135]), (~ selnose[162]), {19{vcc_wire}}};
	// synopsys translate_off
	initial
		DFFStage = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) DFFStage <= 30'b0;
		else if  (clk_en == 1'b1)   DFFStage <= {StageOut[299:285], StageOut[104:90]};
	divider_add_sub   add_sub_0
	( 
	.cout(wire_add_sub_0_cout),
	.dataa(NumeratorIn[25]),
	.datab(DenominatorIn[0]),
	.result(wire_add_sub_0_result));
	divider_add_sub1   add_sub_1
	( 
	.cout(wire_add_sub_1_cout),
	.dataa({StageIn[15], NumeratorIn[50]}),
	.datab(DenominatorIn[16:15]),
	.result(wire_add_sub_1_result));
	assign
		wire_add_sub_10_result_int = wire_add_sub_10_dataa - wire_add_sub_10_datab;
	assign
		wire_add_sub_10_result = wire_add_sub_10_result_int[10:0],
		wire_add_sub_10_cout = ~wire_add_sub_10_result_int[11:11];
	assign
		wire_add_sub_10_dataa = {StageIn[159:150], NumeratorIn[275]},
		wire_add_sub_10_datab = DenominatorIn[160:150];
	assign
		wire_add_sub_11_result_int = wire_add_sub_11_dataa - wire_add_sub_11_datab;
	assign
		wire_add_sub_11_result = wire_add_sub_11_result_int[11:0],
		wire_add_sub_11_cout = ~wire_add_sub_11_result_int[12:12];
	assign
		wire_add_sub_11_dataa = {StageIn[175:165], NumeratorIn[300]},
		wire_add_sub_11_datab = DenominatorIn[176:165];
	assign
		wire_add_sub_12_result_int = wire_add_sub_12_dataa - wire_add_sub_12_datab;
	assign
		wire_add_sub_12_result = wire_add_sub_12_result_int[12:0],
		wire_add_sub_12_cout = ~wire_add_sub_12_result_int[13:13];
	assign
		wire_add_sub_12_dataa = {StageIn[191:180], NumeratorIn[325]},
		wire_add_sub_12_datab = DenominatorIn[192:180];
	assign
		wire_add_sub_13_result_int = wire_add_sub_13_dataa - wire_add_sub_13_datab;
	assign
		wire_add_sub_13_result = wire_add_sub_13_result_int[13:0],
		wire_add_sub_13_cout = ~wire_add_sub_13_result_int[14:14];
	assign
		wire_add_sub_13_dataa = {StageIn[207:195], NumeratorIn[350]},
		wire_add_sub_13_datab = DenominatorIn[208:195];
	assign
		wire_add_sub_14_result_int = wire_add_sub_14_dataa - wire_add_sub_14_datab;
	assign
		wire_add_sub_14_result = wire_add_sub_14_result_int[14:0],
		wire_add_sub_14_cout = ~wire_add_sub_14_result_int[15:15];
	assign
		wire_add_sub_14_dataa = {StageIn[223:210], NumeratorIn[375]},
		wire_add_sub_14_datab = DenominatorIn[224:210];
	assign
		wire_add_sub_15_result_int = wire_add_sub_15_dataa - wire_add_sub_15_datab;
	assign
		wire_add_sub_15_result = wire_add_sub_15_result_int[14:0],
		wire_add_sub_15_cout = ~wire_add_sub_15_result_int[15:15];
	assign
		wire_add_sub_15_dataa = {StageIn[238:225], NumeratorIn[400]},
		wire_add_sub_15_datab = DenominatorIn[239:225];
	assign
		wire_add_sub_16_result_int = wire_add_sub_16_dataa - wire_add_sub_16_datab;
	assign
		wire_add_sub_16_result = wire_add_sub_16_result_int[14:0],
		wire_add_sub_16_cout = ~wire_add_sub_16_result_int[15:15];
	assign
		wire_add_sub_16_dataa = {StageIn[253:240], NumeratorIn[425]},
		wire_add_sub_16_datab = DenominatorIn[254:240];
	assign
		wire_add_sub_17_result_int = wire_add_sub_17_dataa - wire_add_sub_17_datab;
	assign
		wire_add_sub_17_result = wire_add_sub_17_result_int[14:0],
		wire_add_sub_17_cout = ~wire_add_sub_17_result_int[15:15];
	assign
		wire_add_sub_17_dataa = {StageIn[268:255], NumeratorIn[450]},
		wire_add_sub_17_datab = DenominatorIn[269:255];
	assign
		wire_add_sub_18_result_int = wire_add_sub_18_dataa - wire_add_sub_18_datab;
	assign
		wire_add_sub_18_result = wire_add_sub_18_result_int[14:0],
		wire_add_sub_18_cout = ~wire_add_sub_18_result_int[15:15];
	assign
		wire_add_sub_18_dataa = {StageIn[283:270], NumeratorIn[475]},
		wire_add_sub_18_datab = DenominatorIn[284:270];
	assign
		wire_add_sub_19_result_int = wire_add_sub_19_dataa - wire_add_sub_19_datab;
	assign
		wire_add_sub_19_result = wire_add_sub_19_result_int[14:0],
		wire_add_sub_19_cout = ~wire_add_sub_19_result_int[15:15];
	assign
		wire_add_sub_19_dataa = {StageIn[298:285], NumeratorIn[500]},
		wire_add_sub_19_datab = DenominatorIn[299:285];
	assign
		wire_add_sub_2_result_int = wire_add_sub_2_dataa - wire_add_sub_2_datab;
	assign
		wire_add_sub_2_result = wire_add_sub_2_result_int[2:0],
		wire_add_sub_2_cout = ~wire_add_sub_2_result_int[3:3];
	assign
		wire_add_sub_2_dataa = {StageIn[31:30], NumeratorIn[75]},
		wire_add_sub_2_datab = DenominatorIn[32:30];
	assign
		wire_add_sub_20_result_int = wire_add_sub_20_dataa - wire_add_sub_20_datab;
	assign
		wire_add_sub_20_result = wire_add_sub_20_result_int[14:0],
		wire_add_sub_20_cout = ~wire_add_sub_20_result_int[15:15];
	assign
		wire_add_sub_20_dataa = {StageIn[313:300], NumeratorIn[525]},
		wire_add_sub_20_datab = DenominatorIn[314:300];
	assign
		wire_add_sub_21_result_int = wire_add_sub_21_dataa - wire_add_sub_21_datab;
	assign
		wire_add_sub_21_result = wire_add_sub_21_result_int[14:0],
		wire_add_sub_21_cout = ~wire_add_sub_21_result_int[15:15];
	assign
		wire_add_sub_21_dataa = {StageIn[328:315], NumeratorIn[550]},
		wire_add_sub_21_datab = DenominatorIn[329:315];
	assign
		wire_add_sub_22_result_int = wire_add_sub_22_dataa - wire_add_sub_22_datab;
	assign
		wire_add_sub_22_result = wire_add_sub_22_result_int[14:0],
		wire_add_sub_22_cout = ~wire_add_sub_22_result_int[15:15];
	assign
		wire_add_sub_22_dataa = {StageIn[343:330], NumeratorIn[575]},
		wire_add_sub_22_datab = DenominatorIn[344:330];
	assign
		wire_add_sub_23_result_int = wire_add_sub_23_dataa - wire_add_sub_23_datab;
	assign
		wire_add_sub_23_result = wire_add_sub_23_result_int[14:0],
		wire_add_sub_23_cout = ~wire_add_sub_23_result_int[15:15];
	assign
		wire_add_sub_23_dataa = {StageIn[358:345], NumeratorIn[600]},
		wire_add_sub_23_datab = DenominatorIn[359:345];
	assign
		wire_add_sub_24_result_int = wire_add_sub_24_dataa - wire_add_sub_24_datab;
	assign
		wire_add_sub_24_result = wire_add_sub_24_result_int[14:0],
		wire_add_sub_24_cout = ~wire_add_sub_24_result_int[15:15];
	assign
		wire_add_sub_24_dataa = {StageIn[373:360], NumeratorIn[625]},
		wire_add_sub_24_datab = DenominatorIn[374:360];
	assign
		wire_add_sub_25_result_int = wire_add_sub_25_dataa - wire_add_sub_25_datab;
	assign
		wire_add_sub_25_result = wire_add_sub_25_result_int[14:0],
		wire_add_sub_25_cout = ~wire_add_sub_25_result_int[15:15];
	assign
		wire_add_sub_25_dataa = {StageIn[388:375], NumeratorIn[650]},
		wire_add_sub_25_datab = DenominatorIn[389:375];
	assign
		wire_add_sub_3_result_int = wire_add_sub_3_dataa - wire_add_sub_3_datab;
	assign
		wire_add_sub_3_result = wire_add_sub_3_result_int[3:0],
		wire_add_sub_3_cout = ~wire_add_sub_3_result_int[4:4];
	assign
		wire_add_sub_3_dataa = {StageIn[47:45], NumeratorIn[100]},
		wire_add_sub_3_datab = DenominatorIn[48:45];
	assign
		wire_add_sub_4_result_int = wire_add_sub_4_dataa - wire_add_sub_4_datab;
	assign
		wire_add_sub_4_result = wire_add_sub_4_result_int[4:0],
		wire_add_sub_4_cout = ~wire_add_sub_4_result_int[5:5];
	assign
		wire_add_sub_4_dataa = {StageIn[63:60], NumeratorIn[125]},
		wire_add_sub_4_datab = DenominatorIn[64:60];
	assign
		wire_add_sub_5_result_int = wire_add_sub_5_dataa - wire_add_sub_5_datab;
	assign
		wire_add_sub_5_result = wire_add_sub_5_result_int[5:0],
		wire_add_sub_5_cout = ~wire_add_sub_5_result_int[6:6];
	assign
		wire_add_sub_5_dataa = {StageIn[79:75], NumeratorIn[150]},
		wire_add_sub_5_datab = DenominatorIn[80:75];
	assign
		wire_add_sub_6_result_int = wire_add_sub_6_dataa - wire_add_sub_6_datab;
	assign
		wire_add_sub_6_result = wire_add_sub_6_result_int[6:0],
		wire_add_sub_6_cout = ~wire_add_sub_6_result_int[7:7];
	assign
		wire_add_sub_6_dataa = {StageIn[95:90], NumeratorIn[175]},
		wire_add_sub_6_datab = DenominatorIn[96:90];
	assign
		wire_add_sub_7_result_int = wire_add_sub_7_dataa - wire_add_sub_7_datab;
	assign
		wire_add_sub_7_result = wire_add_sub_7_result_int[7:0],
		wire_add_sub_7_cout = ~wire_add_sub_7_result_int[8:8];
	assign
		wire_add_sub_7_dataa = {StageIn[111:105], NumeratorIn[200]},
		wire_add_sub_7_datab = DenominatorIn[112:105];
	assign
		wire_add_sub_8_result_int = wire_add_sub_8_dataa - wire_add_sub_8_datab;
	assign
		wire_add_sub_8_result = wire_add_sub_8_result_int[8:0],
		wire_add_sub_8_cout = ~wire_add_sub_8_result_int[9:9];
	assign
		wire_add_sub_8_dataa = {StageIn[127:120], NumeratorIn[225]},
		wire_add_sub_8_datab = DenominatorIn[128:120];
	assign
		wire_add_sub_9_result_int = wire_add_sub_9_dataa - wire_add_sub_9_datab;
	assign
		wire_add_sub_9_result = wire_add_sub_9_result_int[9:0],
		wire_add_sub_9_cout = ~wire_add_sub_9_result_int[10:10];
	assign
		wire_add_sub_9_dataa = {StageIn[143:135], NumeratorIn[250]},
		wire_add_sub_9_datab = DenominatorIn[144:135];
	assign
		aclr = 1'b0,
		clk_en = 1'b1,
		DenominatorIn = DenominatorIn_tmp,
		DenominatorIn_tmp = {DenominatorIn[389:300], {gnd_wire, DFFDenominator[27:14]}, DenominatorIn[284:105], {gnd_wire, DFFDenominator[13:0]}, DenominatorIn[89:0], {gnd_wire, denominator}},
		gnd_wire = 1'b0,
		nose = {{26{1'b0}}, wire_add_sub_25_cout, {26{1'b0}}, wire_add_sub_24_cout, {26{1'b0}}, wire_add_sub_23_cout, {26{1'b0}}, wire_add_sub_22_cout, {26{1'b0}}, wire_add_sub_21_cout, {26{1'b0}}, wire_add_sub_20_cout, {26{1'b0}}, wire_add_sub_19_cout, {26{1'b0}}, wire_add_sub_18_cout, {26{1'b0}}, wire_add_sub_17_cout, {26{1'b0}}, wire_add_sub_16_cout, {26{1'b0}}, wire_add_sub_15_cout, {26{1'b0}}, wire_add_sub_14_cout, {26{1'b0}}, wire_add_sub_13_cout, {26{1'b0}}, wire_add_sub_12_cout, {26{1'b0}}, wire_add_sub_11_cout, {26{1'b0}}, wire_add_sub_10_cout, {26{1'b0}}, wire_add_sub_9_cout, {26{1'b0}}, wire_add_sub_8_cout, {26{1'b0}}, wire_add_sub_7_cout, {26{1'b0}}, wire_add_sub_6_cout, {26{1'b0}}, wire_add_sub_5_cout, {26{1'b0}}, wire_add_sub_4_cout, {26{1'b0}}, wire_add_sub_3_cout, {26{1'b0}}, wire_add_sub_2_cout, {26{1'b0}}, wire_add_sub_1_cout, {26{1'b0}}, wire_add_sub_0_cout},
		NumeratorIn = NumeratorIn_tmp,
		NumeratorIn_tmp = {NumeratorIn[675:520], DFFNumerator[51:26], NumeratorIn[493:182], DFFNumerator[25:0], NumeratorIn[155:0], numerator},
		prestg = {wire_add_sub_25_result, wire_add_sub_24_result, wire_add_sub_23_result, wire_add_sub_22_result, wire_add_sub_21_result, wire_add_sub_20_result, wire_add_sub_19_result, wire_add_sub_18_result, wire_add_sub_17_result, wire_add_sub_16_result, wire_add_sub_15_result, wire_add_sub_14_result, {1{1'b0}}, wire_add_sub_13_result, {2{1'b0}}, wire_add_sub_12_result, {3{1'b0}}, wire_add_sub_11_result, {4{1'b0}}, wire_add_sub_10_result, {5{1'b0}}, wire_add_sub_9_result, {6{1'b0}}, wire_add_sub_8_result, {7{1'b0}}, wire_add_sub_7_result, {8{1'b0}}, wire_add_sub_6_result, {9{1'b0}}, wire_add_sub_5_result, {10{1'b0}}, wire_add_sub_4_result, {11{1'b0}}, wire_add_sub_3_result, {12{1'b0}}, wire_add_sub_2_result, {13{1'b0}}, wire_add_sub_1_result, {14{1'b0}}, wire_add_sub_0_result},
		quotient = quotient_tmp,
		quotient_tmp = {DFFQuotient[51:32], (~ selnose[540]), (~ selnose[567]), (~ selnose[594]), (~ selnose[621]), (~ selnose[648]), (~ selnose[675])},
		remainder = StageIn[403:390],
		sel = {gnd_wire, (sel[377] | DenominatorIn[403]), (sel[376] | DenominatorIn[402]), (sel[375] | DenominatorIn[401]), (sel[374] | DenominatorIn[400]), (sel[373] | DenominatorIn[399]), (sel[372] | DenominatorIn[398]), (sel[371] | DenominatorIn[397]), (sel[370] | DenominatorIn[396]), (sel[369] | DenominatorIn[395]), (sel[368] | DenominatorIn[394]), (sel[367] | DenominatorIn[393]), (sel[366] | DenominatorIn[392]), (sel[365] | DenominatorIn[391]), gnd_wire, (sel[363] | DenominatorIn[388]), (sel[362] | DenominatorIn[387]), (sel[361] | DenominatorIn[386]), (sel[360] | DenominatorIn[385]), (sel[359] | DenominatorIn[384]), (sel[358] | DenominatorIn[383]), (sel[357] | DenominatorIn[382]), (sel[356] | DenominatorIn[381]), (sel[355] | DenominatorIn[380]), (sel[354] | DenominatorIn[379]), (sel[353] | DenominatorIn[378]), (sel[352] | DenominatorIn[377]), (sel[351] | DenominatorIn[376]), gnd_wire, (sel[349] | DenominatorIn[373]), (sel[348] | DenominatorIn[372]), (sel[347] | DenominatorIn[371]), (sel[346] | DenominatorIn[370]), (sel[345] | DenominatorIn[369]), (sel[344] | DenominatorIn[368]), (sel[343] | DenominatorIn[367]), (sel[342] | DenominatorIn[366]), (sel[341] | DenominatorIn[365]), (sel[340] | DenominatorIn[364]), (sel[339] | DenominatorIn[363]), (sel[338] | DenominatorIn[362]), (sel[337] | DenominatorIn[361]), gnd_wire, (sel[335] | DenominatorIn[358]), (sel[334] | DenominatorIn[357]), (sel[333] | DenominatorIn[356]), (sel[332] | DenominatorIn[355]), (sel[331] | DenominatorIn[354]), (sel[330] | DenominatorIn[353]), (sel[329] | DenominatorIn[352]), (sel[328] | DenominatorIn[351]), (sel[327] | DenominatorIn[350]), (sel[326] | DenominatorIn[349]), (sel[325] | DenominatorIn[348]), (sel[324] | DenominatorIn[347]), (sel[323] | DenominatorIn[346]), gnd_wire, (sel[321] | DenominatorIn[343]), (sel[320] | DenominatorIn[342]), (sel[319] | DenominatorIn[341]), (sel[318] | DenominatorIn[340]), (sel[317] | DenominatorIn[339]), (sel[316] | DenominatorIn[338]), (sel[315] | DenominatorIn[337]), (sel[314] | DenominatorIn[336]), (sel[313]
 | DenominatorIn[335]), (sel[312] | DenominatorIn[334]), (sel[311] | DenominatorIn[333]), (sel[310] | DenominatorIn[332]), (sel[309] | DenominatorIn[331]), gnd_wire, (sel[307] | DenominatorIn[328]), (sel[306] | DenominatorIn[327]), (sel[305] | DenominatorIn[326]), (sel[304] | DenominatorIn[325]), (sel[303] | DenominatorIn[324]), (sel[302] | DenominatorIn[323]), (sel[301] | DenominatorIn[322]), (sel[300] | DenominatorIn[321]), (sel[299] | DenominatorIn[320]), (sel[298] | DenominatorIn[319]), (sel[297] | DenominatorIn[318]), (sel[296] | DenominatorIn[317]), (sel[295] | DenominatorIn[316]), gnd_wire, (sel[293] | DenominatorIn[313]), (sel[292] | DenominatorIn[312]), (sel[291] | DenominatorIn[311]), (sel[290] | DenominatorIn[310]), (sel[289] | DenominatorIn[309]), (sel[288] | DenominatorIn[308]), (sel[287] | DenominatorIn[307]), (sel[286] | DenominatorIn[306]), (sel[285] | DenominatorIn[305]), (sel[284] | DenominatorIn[304]), (sel[283] | DenominatorIn[303]), (sel[282] | DenominatorIn[302]), (sel[281] | DenominatorIn[301]), gnd_wire, (sel[279] | DenominatorIn[298]), (sel[278] | DenominatorIn[297]), (sel[277] | DenominatorIn[296]), (sel[276] | DenominatorIn[295]), (sel[275] | DenominatorIn[294]), (sel[274] | DenominatorIn[293]), (sel[273] | DenominatorIn[292]), (sel[272] | DenominatorIn[291]), (sel[271] | DenominatorIn[290]), (sel[270] | DenominatorIn[289]), (sel[269] | DenominatorIn[288]), (sel[268] | DenominatorIn[287]), (sel[267] | DenominatorIn[286]), gnd_wire, (sel[265] | DenominatorIn[283]), (sel[264] | DenominatorIn[282]), (sel[263] | DenominatorIn[281]), (sel[262] | DenominatorIn[280]), (sel[261] | DenominatorIn[279]), (sel[260] | DenominatorIn[278]), (sel[259] | DenominatorIn[277]), (sel[258] | DenominatorIn[276]), (sel[257] | DenominatorIn[275]), (sel[256] | DenominatorIn[274]), (sel[255] | DenominatorIn[273]), (sel[254] | DenominatorIn[272]), (sel[253] | DenominatorIn[271]), gnd_wire, (sel[251] | DenominatorIn[268]), (sel[250] | DenominatorIn[267]), (sel[249] | DenominatorIn[266]), (sel[248] | DenominatorIn[265]
), (sel[247] | DenominatorIn[264]), (sel[246] | DenominatorIn[263]), (sel[245] | DenominatorIn[262]), (sel[244] | DenominatorIn[261]), (sel[243] | DenominatorIn[260]), (sel[242] | DenominatorIn[259]), (sel[241] | DenominatorIn[258]), (sel[240] | DenominatorIn[257]), (sel[239] | DenominatorIn[256]), gnd_wire, (sel[237] | DenominatorIn[253]), (sel[236] | DenominatorIn[252]), (sel[235] | DenominatorIn[251]), (sel[234] | DenominatorIn[250]), (sel[233] | DenominatorIn[249]), (sel[232] | DenominatorIn[248]), (sel[231] | DenominatorIn[247]), (sel[230] | DenominatorIn[246]), (sel[229] | DenominatorIn[245]), (sel[228] | DenominatorIn[244]), (sel[227] | DenominatorIn[243]), (sel[226] | DenominatorIn[242]), (sel[225] | DenominatorIn[241]), gnd_wire, (sel[223] | DenominatorIn[238]), (sel[222] | DenominatorIn[237]), (sel[221] | DenominatorIn[236]), (sel[220] | DenominatorIn[235]), (sel[219] | DenominatorIn[234]), (sel[218] | DenominatorIn[233]), (sel[217] | DenominatorIn[232]), (sel[216] | DenominatorIn[231]), (sel[215] | DenominatorIn[230]), (sel[214] | DenominatorIn[229]), (sel[213] | DenominatorIn[228]), (sel[212] | DenominatorIn[227]), (sel[211] | DenominatorIn[226]), gnd_wire, (sel[209] | DenominatorIn[223]), (sel[208] | DenominatorIn[222]), (sel[207] | DenominatorIn[221]), (sel[206] | DenominatorIn[220]), (sel[205] | DenominatorIn[219]), (sel[204] | DenominatorIn[218]), (sel[203] | DenominatorIn[217]), (sel[202] | DenominatorIn[216]), (sel[201] | DenominatorIn[215]), (sel[200] | DenominatorIn[214]), (sel[199] | DenominatorIn[213]), (sel[198] | DenominatorIn[212]), (sel[197] | DenominatorIn[211]), gnd_wire, (sel[195] | DenominatorIn[208]), (sel[194] | DenominatorIn[207]), (sel[193] | DenominatorIn[206]), (sel[192] | DenominatorIn[205]), (sel[191] | DenominatorIn[204]), (sel[190] | DenominatorIn[203]), (sel[189] | DenominatorIn[202]), (sel[188] | DenominatorIn[201]), (sel[187] | DenominatorIn[200]), (sel[186] | DenominatorIn[199]), (sel[185] | DenominatorIn[198]), (sel[184] | DenominatorIn[197]), (sel[183] | DenominatorIn[196]
), gnd_wire, (sel[181] | DenominatorIn[193]), (sel[180] | DenominatorIn[192]), (sel[179] | DenominatorIn[191]), (sel[178] | DenominatorIn[190]), (sel[177] | DenominatorIn[189]), (sel[176] | DenominatorIn[188]), (sel[175] | DenominatorIn[187]), (sel[174] | DenominatorIn[186]), (sel[173] | DenominatorIn[185]), (sel[172] | DenominatorIn[184]), (sel[171] | DenominatorIn[183]), (sel[170] | DenominatorIn[182]), (sel[169] | DenominatorIn[181]), gnd_wire, (sel[167] | DenominatorIn[178]), (sel[166] | DenominatorIn[177]), (sel[165] | DenominatorIn[176]), (sel[164] | DenominatorIn[175]), (sel[163] | DenominatorIn[174]), (sel[162] | DenominatorIn[173]), (sel[161] | DenominatorIn[172]), (sel[160] | DenominatorIn[171]), (sel[159] | DenominatorIn[170]), (sel[158] | DenominatorIn[169]), (sel[157] | DenominatorIn[168]), (sel[156] | DenominatorIn[167]), (sel[155] | DenominatorIn[166]), gnd_wire, (sel[153] | DenominatorIn[163]), (sel[152] | DenominatorIn[162]), (sel[151] | DenominatorIn[161]), (sel[150] | DenominatorIn[160]), (sel[149] | DenominatorIn[159]), (sel[148] | DenominatorIn[158]), (sel[147] | DenominatorIn[157]), (sel[146] | DenominatorIn[156]), (sel[145] | DenominatorIn[155]), (sel[144] | DenominatorIn[154]), (sel[143] | DenominatorIn[153]), (sel[142] | DenominatorIn[152]), (sel[141] | DenominatorIn[151]), gnd_wire, (sel[139] | DenominatorIn[148]), (sel[138] | DenominatorIn[147]), (sel[137] | DenominatorIn[146]), (sel[136] | DenominatorIn[145]), (sel[135] | DenominatorIn[144]), (sel[134] | DenominatorIn[143]), (sel[133] | DenominatorIn[142]), (sel[132] | DenominatorIn[141]), (sel[131] | DenominatorIn[140]), (sel[130] | DenominatorIn[139]), (sel[129] | DenominatorIn[138]), (sel[128] | DenominatorIn[137]), (sel[127] | DenominatorIn[136]), gnd_wire, (sel[125] | DenominatorIn[133]), (sel[124] | DenominatorIn[132]), (sel[123] | DenominatorIn[131]), (sel[122] | DenominatorIn[130]), (sel[121] | DenominatorIn[129]), (sel[120] | DenominatorIn[128]), (sel[119] | DenominatorIn[127]), (sel[118] | DenominatorIn[126]), (sel[117] | DenominatorIn[125]
), (sel[116] | DenominatorIn[124]), (sel[115] | DenominatorIn[123]), (sel[114] | DenominatorIn[122]), (sel[113] | DenominatorIn[121]), gnd_wire, (sel[111] | DenominatorIn[118]), (sel[110] | DenominatorIn[117]), (sel[109] | DenominatorIn[116]), (sel[108] | DenominatorIn[115]), (sel[107] | DenominatorIn[114]), (sel[106] | DenominatorIn[113]), (sel[105] | DenominatorIn[112]), (sel[104] | DenominatorIn[111]), (sel[103] | DenominatorIn[110]), (sel[102] | DenominatorIn[109]), (sel[101] | DenominatorIn[108]), (sel[100] | DenominatorIn[107]), (sel[99] | DenominatorIn[106]), gnd_wire, (sel[97] | DenominatorIn[103]), (sel[96] | DenominatorIn[102]), (sel[95] | DenominatorIn[101]), (sel[94] | DenominatorIn[100]), (sel[93] | DenominatorIn[99]), (sel[92] | DenominatorIn[98]), (sel[91] | DenominatorIn[97]), (sel[90] | DenominatorIn[96]), (sel[89] | DenominatorIn[95]), (sel[88] | DenominatorIn[94]), (sel[87] | DenominatorIn[93]), (sel[86] | DenominatorIn[92]), (sel[85] | DenominatorIn[91]), gnd_wire, (sel[83] | DenominatorIn[88]), (sel[82] | DenominatorIn[87]), (sel[81] | DenominatorIn[86]), (sel[80] | DenominatorIn[85]), (sel[79] | DenominatorIn[84]), (sel[78] | DenominatorIn[83]), (sel[77] | DenominatorIn[82]), (sel[76] | DenominatorIn[81]), (sel[75] | DenominatorIn[80]), (sel[74] | DenominatorIn[79]), (sel[73] | DenominatorIn[78]), (sel[72] | DenominatorIn[77]), (sel[71] | DenominatorIn[76]), gnd_wire, (sel[69] | DenominatorIn[73]), (sel[68] | DenominatorIn[72]), (sel[67] | DenominatorIn[71]), (sel[66] | DenominatorIn[70]), (sel[65] | DenominatorIn[69]), (sel[64] | DenominatorIn[68]), (sel[63] | DenominatorIn[67]), (sel[62] | DenominatorIn[66]), (sel[61] | DenominatorIn[65]), (sel[60] | DenominatorIn[64]), (sel[59] | DenominatorIn[63]), (sel[58] | DenominatorIn[62]), (sel[57] | DenominatorIn[61]), gnd_wire, (sel[55] | DenominatorIn[58]), (sel[54] | DenominatorIn[57]), (sel[53] | DenominatorIn[56]), (sel[52] | DenominatorIn[55]), (sel[51] | DenominatorIn[54]), (sel[50] | DenominatorIn[53]), (sel[49] | DenominatorIn[52]), (sel[48]
 | DenominatorIn[51]), (sel[47] | DenominatorIn[50]), (sel[46] | DenominatorIn[49]), (sel[45] | DenominatorIn[48]), (sel[44] | DenominatorIn[47]), (sel[43] | DenominatorIn[46]), gnd_wire, (sel[41] | DenominatorIn[43]), (sel[40] | DenominatorIn[42]), (sel[39] | DenominatorIn[41]), (sel[38] | DenominatorIn[40]), (sel[37] | DenominatorIn[39]), (sel[36] | DenominatorIn[38]), (sel[35] | DenominatorIn[37]), (sel[34] | DenominatorIn[36]), (sel[33] | DenominatorIn[35]), (sel[32] | DenominatorIn[34]), (sel[31] | DenominatorIn[33]), (sel[30] | DenominatorIn[32]), (sel[29] | DenominatorIn[31]), gnd_wire, (sel[27] | DenominatorIn[28]), (sel[26] | DenominatorIn[27]), (sel[25] | DenominatorIn[26]), (sel[24] | DenominatorIn[25]), (sel[23] | DenominatorIn[24]), (sel[22] | DenominatorIn[23]), (sel[21] | DenominatorIn[22]), (sel[20] | DenominatorIn[21]), (sel[19] | DenominatorIn[20]), (sel[18] | DenominatorIn[19]), (sel[17] | DenominatorIn[18]), (sel[16] | DenominatorIn[17]), (sel[15] | DenominatorIn[16]), gnd_wire, (sel[13] | DenominatorIn[13]), (sel[12] | DenominatorIn[12]), (sel[11] | DenominatorIn[11]), (sel[10] | DenominatorIn[10]), (sel[9] | DenominatorIn[9]), (sel[8] | DenominatorIn[8]), (sel[7] | DenominatorIn[7]), (sel[6] | DenominatorIn[6]), (sel[5] | DenominatorIn[5]), (sel[4] | DenominatorIn[4]), (sel[3] | DenominatorIn[3]), (sel[2] | DenominatorIn[2]), (sel[1] | DenominatorIn[1])},
		selnose = {(~ nose[701]), (~ nose[700]), (~ nose[699]), (~ nose[698]), (~ nose[697]), (~ nose[696]), (~ nose[695]), (~ nose[694]), (~ nose[693]), (~ nose[692]), (~ nose[691]), (~ nose[690]), ((~ nose[689]) | sel[377]), ((~ nose[688]) | sel[376]), ((~ nose[687]) | sel[375]), ((~ nose[686]) | sel[374]), ((~ nose[685]) | sel[373]), ((~ nose[684]) | sel[372]), ((~ nose[683]) | sel[371]), ((~ nose[682]) | sel[370]), ((~ nose[681]) | sel[369]), ((~ nose[680]) | sel[368]), ((~ nose[679]) | sel[367]), ((~ nose[678]) | sel[366]), ((~ nose[677]) | sel[365]), ((~ nose[676]) | sel[364]), (~ nose[675]), (~ nose[674]), (~ nose[673]), (~ nose[672]), (~ nose[671]), (~ nose[670]), (~ nose[669]), (~ nose[668]), (~ nose[667]), (~ nose[666]), (~ nose[665]), (~ nose[664]), ((~ nose[663]) | sel[363]), ((~ nose[662]) | sel[362]), ((~ nose[661]) | sel[361]), ((~ nose[660]) | sel[360]), ((~ nose[659]) | sel[359]), ((~ nose[658]) | sel[358]), ((~ nose[657]) | sel[357]), ((~ nose[656]) | sel[356]), ((~ nose[655]) | sel[355]), ((~ nose[654]) | sel[354]), ((~ nose[653]) | sel[353]), ((~ nose[652]) | sel[352]), ((~ nose[651]) | sel[351]), ((~ nose[650]) | sel[350]), (~ nose[649]), (~ nose[648]), (~ nose[647]), (~ nose[646]), (~ nose[645]), (~ nose[644]), (~ nose[643]), (~ nose[642]), (~ nose[641]), (~ nose[640]), (~ nose[639]), (~ nose[638]), ((~ nose[637]) | sel[349]), ((~ nose[636]) | sel[348]), ((~ nose[635]) | sel[347]), ((~ nose[634]) | sel[346]), ((~ nose[633]) | sel[345]), ((~ nose[632]) | sel[344]), ((~ nose[631]) | sel[343]), ((~ nose[630]) | sel[342]), ((~ nose[629]) | sel[341]), ((~ nose[628]) | sel[340]), ((~ nose[627]) | sel[339]), ((~ nose[626]) | sel[338]), ((~ nose[625]) | sel[337]), ((~ nose[624]) | sel[336]), (~ nose[623]), (~ nose[622]), (~ nose[621]), (~ nose[620]), (~ nose[619]), (~ nose[618]), (~ nose[617]), (~ nose[616]), (~ nose[615]), (~ nose[614]), (~ nose[613]), (~ nose[612]), ((~ nose[611]) | sel[335]), ((~ nose[610]) | sel[334]), ((~ nose[609]) | sel[333]), ((~ nose[608]) | sel[332]), ((~ nose[607]) | sel[331]),
 ((~ nose[606]) | sel[330]), ((~ nose[605]) | sel[329]), ((~ nose[604]) | sel[328]), ((~ nose[603]) | sel[327]), ((~ nose[602]) | sel[326]), ((~ nose[601]) | sel[325]), ((~ nose[600]) | sel[324]), ((~ nose[599]) | sel[323]), ((~ nose[598]) | sel[322]), (~ nose[597]), (~ nose[596]), (~ nose[595]), (~ nose[594]), (~ nose[593]), (~ nose[592]), (~ nose[591]), (~ nose[590]), (~ nose[589]), (~ nose[588]), (~ nose[587]), (~ nose[586]), ((~ nose[585]) | sel[321]), ((~ nose[584]) | sel[320]), ((~ nose[583]) | sel[319]), ((~ nose[582]) | sel[318]), ((~ nose[581]) | sel[317]), ((~ nose[580]) | sel[316]), ((~ nose[579]) | sel[315]), ((~ nose[578]) | sel[314]), ((~ nose[577]) | sel[313]), ((~ nose[576]) | sel[312]), ((~ nose[575]) | sel[311]), ((~ nose[574]) | sel[310]), ((~ nose[573]) | sel[309]), ((~ nose[572]) | sel[308]), (~ nose[571]), (~ nose[570]), (~ nose[569]), (~ nose[568]), (~ nose[567]), (~ nose[566]), (~ nose[565]), (~ nose[564]), (~ nose[563]), (~ nose[562]), (~ nose[561]), (~ nose[560]), ((~ nose[559]) | sel[307]), ((~ nose[558]) | sel[306]), ((~ nose[557]) | sel[305]), ((~ nose[556]) | sel[304]), ((~ nose[555]) | sel[303]), ((~ nose[554]) | sel[302]), ((~ nose[553]) | sel[301]), ((~ nose[552]) | sel[300]), ((~ nose[551]) | sel[299]), ((~ nose[550]) | sel[298]), ((~ nose[549]) | sel[297]), ((~ nose[548]) | sel[296]), ((~ nose[547]) | sel[295]), ((~ nose[546]) | sel[294]), (~ nose[545]), (~ nose[544]), (~ nose[543]), (~ nose[542]), (~ nose[541]), (~ nose[540]), (~ nose[539]), (~ nose[538]), (~ nose[537]), (~ nose[536]), (~ nose[535]), (~ nose[534]), ((~ nose[533]) | sel[293]), ((~ nose[532]) | sel[292]), ((~ nose[531]) | sel[291]), ((~ nose[530]) | sel[290]), ((~ nose[529]) | sel[289]), ((~ nose[528]) | sel[288]), ((~ nose[527]) | sel[287]), ((~ nose[526]) | sel[286]), ((~ nose[525]) | sel[285]), ((~ nose[524]) | sel[284]), ((~ nose[523]) | sel[283]), ((~ nose[522]) | sel[282]), ((~ nose[521]) | sel[281]), ((~ nose[520]) | sel[280]), (~ nose[519]), (~ nose[518]), (~ nose[517]), (~ nose[516]), (~ nose[515]), (~ nose[514]
), (~ nose[513]), (~ nose[512]), (~ nose[511]), (~ nose[510]), (~ nose[509]), (~ nose[508]), ((~ nose[507]) | sel[279]), ((~ nose[506]) | sel[278]), ((~ nose[505]) | sel[277]), ((~ nose[504]) | sel[276]), ((~ nose[503]) | sel[275]), ((~ nose[502]) | sel[274]), ((~ nose[501]) | sel[273]), ((~ nose[500]) | sel[272]), ((~ nose[499]) | sel[271]), ((~ nose[498]) | sel[270]), ((~ nose[497]) | sel[269]), ((~ nose[496]) | sel[268]), ((~ nose[495]) | sel[267]), ((~ nose[494]) | sel[266]), (~ nose[493]), (~ nose[492]), (~ nose[491]), (~ nose[490]), (~ nose[489]), (~ nose[488]), (~ nose[487]), (~ nose[486]), (~ nose[485]), (~ nose[484]), (~ nose[483]), (~ nose[482]), ((~ nose[481]) | sel[265]), ((~ nose[480]) | sel[264]), ((~ nose[479]) | sel[263]), ((~ nose[478]) | sel[262]), ((~ nose[477]) | sel[261]), ((~ nose[476]) | sel[260]), ((~ nose[475]) | sel[259]), ((~ nose[474]) | sel[258]), ((~ nose[473]) | sel[257]), ((~ nose[472]) | sel[256]), ((~ nose[471]) | sel[255]), ((~ nose[470]) | sel[254]), ((~ nose[469]) | sel[253]), ((~ nose[468]) | sel[252]), (~ nose[467]), (~ nose[466]), (~ nose[465]), (~ nose[464]), (~ nose[463]), (~ nose[462]), (~ nose[461]), (~ nose[460]), (~ nose[459]), (~ nose[458]), (~ nose[457]), (~ nose[456]), ((~ nose[455]) | sel[251]), ((~ nose[454]) | sel[250]), ((~ nose[453]) | sel[249]), ((~ nose[452]) | sel[248]), ((~ nose[451]) | sel[247]), ((~ nose[450]) | sel[246]), ((~ nose[449]) | sel[245]), ((~ nose[448]) | sel[244]), ((~ nose[447]) | sel[243]), ((~ nose[446]) | sel[242]), ((~ nose[445]) | sel[241]), ((~ nose[444]) | sel[240]), ((~ nose[443]) | sel[239]), ((~ nose[442]) | sel[238]), (~ nose[441]), (~ nose[440]), (~ nose[439]), (~ nose[438]), (~ nose[437]), (~ nose[436]), (~ nose[435]), (~ nose[434]), (~ nose[433]), (~ nose[432]), (~ nose[431]), (~ nose[430]), ((~ nose[429]) | sel[237]), ((~ nose[428]) | sel[236]), ((~ nose[427]) | sel[235]), ((~ nose[426]) | sel[234]), ((~ nose[425]) | sel[233]), ((~ nose[424]) | sel[232]), ((~ nose[423]) | sel[231]), ((~ nose[422]) | sel[230]), ((~ nose[421]) |
 sel[229]), ((~ nose[420]) | sel[228]), ((~ nose[419]) | sel[227]), ((~ nose[418]) | sel[226]), ((~ nose[417]) | sel[225]), ((~ nose[416]) | sel[224]), (~ nose[415]), (~ nose[414]), (~ nose[413]), (~ nose[412]), (~ nose[411]), (~ nose[410]), (~ nose[409]), (~ nose[408]), (~ nose[407]), (~ nose[406]), (~ nose[405]), (~ nose[404]), ((~ nose[403]) | sel[223]), ((~ nose[402]) | sel[222]), ((~ nose[401]) | sel[221]), ((~ nose[400]) | sel[220]), ((~ nose[399]) | sel[219]), ((~ nose[398]) | sel[218]), ((~ nose[397]) | sel[217]), ((~ nose[396]) | sel[216]), ((~ nose[395]) | sel[215]), ((~ nose[394]) | sel[214]), ((~ nose[393]) | sel[213]), ((~ nose[392]) | sel[212]), ((~ nose[391]) | sel[211]), ((~ nose[390]) | sel[210]), (~ nose[389]), (~ nose[388]), (~ nose[387]), (~ nose[386]), (~ nose[385]), (~ nose[384]), (~ nose[383]), (~ nose[382]), (~ nose[381]), (~ nose[380]), (~ nose[379]), (~ nose[378]), ((~ nose[377]) | sel[209]), ((~ nose[376]) | sel[208]), ((~ nose[375]) | sel[207]), ((~ nose[374]) | sel[206]), ((~ nose[373]) | sel[205]), ((~ nose[372]) | sel[204]), ((~ nose[371]) | sel[203]), ((~ nose[370]) | sel[202]), ((~ nose[369]) | sel[201]), ((~ nose[368]) | sel[200]), ((~ nose[367]) | sel[199]), ((~ nose[366]) | sel[198]), ((~ nose[365]) | sel[197]), ((~ nose[364]) | sel[196]), (~ nose[363]), (~ nose[362]), (~ nose[361]), (~ nose[360]), (~ nose[359]), (~ nose[358]), (~ nose[357]), (~ nose[356]), (~ nose[355]), (~ nose[354]), (~ nose[353]), (~ nose[352]), ((~ nose[351]) | sel[195]), ((~ nose[350]) | sel[194]), ((~ nose[349]) | sel[193]), ((~ nose[348]) | sel[192]), ((~ nose[347]) | sel[191]), ((~ nose[346]) | sel[190]), ((~ nose[345]) | sel[189]), ((~ nose[344]) | sel[188]), ((~ nose[343]) | sel[187]), ((~ nose[342]) | sel[186]), ((~ nose[341]) | sel[185]), ((~ nose[340]) | sel[184]), ((~ nose[339]) | sel[183]), ((~ nose[338]) | sel[182]), (~ nose[337]), (~ nose[336]), (~ nose[335]), (~ nose[334]), (~ nose[333]), (~ nose[332]), (~ nose[331]), (~ nose[330]), (~ nose[329]), (~ nose[328]), (~ nose[327]), (~ nose[326]), 
((~ nose[325]) | sel[181]), ((~ nose[324]) | sel[180]), ((~ nose[323]) | sel[179]), ((~ nose[322]) | sel[178]), ((~ nose[321]) | sel[177]), ((~ nose[320]) | sel[176]), ((~ nose[319]) | sel[175]), ((~ nose[318]) | sel[174]), ((~ nose[317]) | sel[173]), ((~ nose[316]) | sel[172]), ((~ nose[315]) | sel[171]), ((~ nose[314]) | sel[170]), ((~ nose[313]) | sel[169]), ((~ nose[312]) | sel[168]), (~ nose[311]), (~ nose[310]), (~ nose[309]), (~ nose[308]), (~ nose[307]), (~ nose[306]), (~ nose[305]), (~ nose[304]), (~ nose[303]), (~ nose[302]), (~ nose[301]), (~ nose[300]), ((~ nose[299]) | sel[167]), ((~ nose[298]) | sel[166]), ((~ nose[297]) | sel[165]), ((~ nose[296]) | sel[164]), ((~ nose[295]) | sel[163]), ((~ nose[294]) | sel[162]), ((~ nose[293]) | sel[161]), ((~ nose[292]) | sel[160]), ((~ nose[291]) | sel[159]), ((~ nose[290]) | sel[158]), ((~ nose[289]) | sel[157]), ((~ nose[288]) | sel[156]), ((~ nose[287]) | sel[155]), ((~ nose[286]) | sel[154]), (~ nose[285]), (~ nose[284]), (~ nose[283]), (~ nose[282]), (~ nose[281]), (~ nose[280]), (~ nose[279]), (~ nose[278]), (~ nose[277]), (~ nose[276]), (~ nose[275]), (~ nose[274]), ((~ nose[273]) | sel[153]), ((~ nose[272]) | sel[152]), ((~ nose[271]) | sel[151]), ((~ nose[270]) | sel[150]), ((~ nose[269]) | sel[149]), ((~ nose[268]) | sel[148]), ((~ nose[267]) | sel[147]), ((~ nose[266]) | sel[146]), ((~ nose[265]) | sel[145]), ((~ nose[264]) | sel[144]), ((~ nose[263]) | sel[143]), ((~ nose[262]) | sel[142]), ((~ nose[261]) | sel[141]), ((~ nose[260]) | sel[140]), (~ nose[259]), (~ nose[258]), (~ nose[257]), (~ nose[256]), (~ nose[255]), (~ nose[254]), (~ nose[253]), (~ nose[252]), (~ nose[251]), (~ nose[250]), (~ nose[249]), (~ nose[248]), ((~ nose[247]) | sel[139]), ((~ nose[246]) | sel[138]), ((~ nose[245]) | sel[137]), ((~ nose[244]) | sel[136]), ((~ nose[243]) | sel[135]), ((~ nose[242]) | sel[134]), ((~ nose[241]) | sel[133]), ((~ nose[240]) | sel[132]), ((~ nose[239]) | sel[131]), ((~ nose[238]) | sel[130]), ((~ nose[237]) | sel[129]), ((~ nose[236]) | sel[128]
), ((~ nose[235]) | sel[127]), ((~ nose[234]) | sel[126]), (~ nose[233]), (~ nose[232]), (~ nose[231]), (~ nose[230]), (~ nose[229]), (~ nose[228]), (~ nose[227]), (~ nose[226]), (~ nose[225]), (~ nose[224]), (~ nose[223]), (~ nose[222]), ((~ nose[221]) | sel[125]), ((~ nose[220]) | sel[124]), ((~ nose[219]) | sel[123]), ((~ nose[218]) | sel[122]), ((~ nose[217]) | sel[121]), ((~ nose[216]) | sel[120]), ((~ nose[215]) | sel[119]), ((~ nose[214]) | sel[118]), ((~ nose[213]) | sel[117]), ((~ nose[212]) | sel[116]), ((~ nose[211]) | sel[115]), ((~ nose[210]) | sel[114]), ((~ nose[209]) | sel[113]), ((~ nose[208]) | sel[112]), (~ nose[207]), (~ nose[206]), (~ nose[205]), (~ nose[204]), (~ nose[203]), (~ nose[202]), (~ nose[201]), (~ nose[200]), (~ nose[199]), (~ nose[198]), (~ nose[197]), (~ nose[196]), ((~ nose[195]) | sel[111]), ((~ nose[194]) | sel[110]), ((~ nose[193]) | sel[109]), ((~ nose[192]) | sel[108]), ((~ nose[191]) | sel[107]), ((~ nose[190]) | sel[106]), ((~ nose[189]) | sel[105]), ((~ nose[188]) | sel[104]), ((~ nose[187]) | sel[103]), ((~ nose[186]) | sel[102]), ((~ nose[185]) | sel[101]), ((~ nose[184]) | sel[100]), ((~ nose[183]) | sel[99]), ((~ nose[182]) | sel[98]), (~ nose[181]), (~ nose[180]), (~ nose[179]), (~ nose[178]), (~ nose[177]), (~ nose[176]), (~ nose[175]), (~ nose[174]), (~ nose[173]), (~ nose[172]), (~ nose[171]), (~ nose[170]), ((~ nose[169]) | sel[97]), ((~ nose[168]) | sel[96]), ((~ nose[167]) | sel[95]), ((~ nose[166]) | sel[94]), ((~ nose[165]) | sel[93]), ((~ nose[164]) | sel[92]), ((~ nose[163]) | sel[91]), ((~ nose[162]) | sel[90]), ((~ nose[161]) | sel[89]), ((~ nose[160]) | sel[88]), ((~ nose[159]) | sel[87]), ((~ nose[158]) | sel[86]), ((~ nose[157]) | sel[85]), ((~ nose[156]) | sel[84]), (~ nose[155]), (~ nose[154]), (~ nose[153]), (~ nose[152]), (~ nose[151]), (~ nose[150]), (~ nose[149]), (~ nose[148]), (~ nose[147]), (~ nose[146]), (~ nose[145]), (~ nose[144]), ((~ nose[143]) | sel[83]), ((~ nose[142]) | sel[82]), ((~ nose[141]) | sel[81]), ((~ nose[140]) | sel[80]), (
(~ nose[139]) | sel[79]), ((~ nose[138]) | sel[78]), ((~ nose[137]) | sel[77]), ((~ nose[136]) | sel[76]), ((~ nose[135]) | sel[75]), ((~ nose[134]) | sel[74]), ((~ nose[133]) | sel[73]), ((~ nose[132]) | sel[72]), ((~ nose[131]) | sel[71]), ((~ nose[130]) | sel[70]), (~ nose[129]), (~ nose[128]), (~ nose[127]), (~ nose[126]), (~ nose[125]), (~ nose[124]), (~ nose[123]), (~ nose[122]), (~ nose[121]), (~ nose[120]), (~ nose[119]), (~ nose[118]), ((~ nose[117]) | sel[69]), ((~ nose[116]) | sel[68]), ((~ nose[115]) | sel[67]), ((~ nose[114]) | sel[66]), ((~ nose[113]) | sel[65]), ((~ nose[112]) | sel[64]), ((~ nose[111]) | sel[63]), ((~ nose[110]) | sel[62]), ((~ nose[109]) | sel[61]), ((~ nose[108]) | sel[60]), ((~ nose[107]) | sel[59]), ((~ nose[106]) | sel[58]), ((~ nose[105]) | sel[57]), ((~ nose[104]) | sel[56]), (~ nose[103]), (~ nose[102]), (~ nose[101]), (~ nose[100]), (~ nose[99]), (~ nose[98]), (~ nose[97]), (~ nose[96]), (~ nose[95]), (~ nose[94]), (~ nose[93]), (~ nose[92]), ((~ nose[91]) | sel[55]), ((~ nose[90]) | sel[54]), ((~ nose[89]) | sel[53]), ((~ nose[88]) | sel[52]), ((~ nose[87]) | sel[51]), ((~ nose[86]) | sel[50]), ((~ nose[85]) | sel[49]), ((~ nose[84]) | sel[48]), ((~ nose[83]) | sel[47]), ((~ nose[82]) | sel[46]), ((~ nose[81]) | sel[45]), ((~ nose[80]) | sel[44]), ((~ nose[79]) | sel[43]), ((~ nose[78]) | sel[42]), (~ nose[77]), (~ nose[76]), (~ nose[75]), (~ nose[74]), (~ nose[73]), (~ nose[72]), (~ nose[71]), (~ nose[70]), (~ nose[69]), (~ nose[68]), (~ nose[67]), (~ nose[66]), ((~ nose[65]) | sel[41]), ((~ nose[64]) | sel[40]), ((~ nose[63]) | sel[39]), ((~ nose[62]) | sel[38]), ((~ nose[61]) | sel[37]), ((~ nose[60]) | sel[36]), ((~ nose[59]) | sel[35]), ((~ nose[58]) | sel[34]), ((~ nose[57]) | sel[33]), ((~ nose[56]) | sel[32]), ((~ nose[55]) | sel[31]), ((~ nose[54]) | sel[30]), ((~ nose[53]) | sel[29]), ((~ nose[52]) | sel[28]), (~ nose[51]), (~ nose[50]), (~ nose[49]), (~ nose[48]), (~ nose[47]), (~ nose[46]), (~ nose[45]), (~ nose[44]), (~ nose[43]), (~ nose[42]), (~ nose[41]),
 (~ nose[40]), ((~ nose[39]) | sel[27]), ((~ nose[38]) | sel[26]), ((~ nose[37]) | sel[25]), ((~ nose[36]) | sel[24]), ((~ nose[35]) | sel[23]), ((~ nose[34]) | sel[22]), ((~ nose[33]) | sel[21]), ((~ nose[32]) | sel[20]), ((~ nose[31]) | sel[19]), ((~ nose[30]) | sel[18]), ((~ nose[29]) | sel[17]), ((~ nose[28]) | sel[16]), ((~ nose[27]) | sel[15]), ((~ nose[26]) | sel[14]), (~ nose[25]), (~ nose[24]), (~ nose[23]), (~ nose[22]), (~ nose[21]), (~ nose[20]), (~ nose[19]), (~ nose[18]), (~ nose[17]), (~ nose[16]), (~ nose[15]), (~ nose[14]), ((~ nose[13]) | sel[13]), ((~ nose[12]) | sel[12]), ((~ nose[11]) | sel[11]), ((~ nose[10]) | sel[10]), ((~ nose[9]) | sel[9]), ((~ nose[8]) | sel[8]), ((~ nose[7]) | sel[7]), ((~ nose[6]) | sel[6]), ((~ nose[5]) | sel[5]), ((~ nose[4]) | sel[4]), ((~ nose[3]) | sel[3]), ((~ nose[2]) | sel[2]), ((~ nose[1]) | sel[1]), ((~ nose[0]) | sel[0])},
		StageIn = StageIn_tmp,
		StageIn_tmp = {StageOut[389:300], DFFStage[29:15], StageOut[284:105], DFFStage[14:0], StageOut[89:0], {15{1'b0}}},
		StageOut = {(({StageIn[388:375], NumeratorIn[650]} & {15{selnose[675]}}) | (prestg[389:375] & {15{(~ selnose[675])}})), (({StageIn[373:360], NumeratorIn[625]} & {15{selnose[648]}}) | (prestg[374:360] & {15{(~ selnose[648])}})), (({StageIn[358:345], NumeratorIn[600]} & {15{selnose[621]}}) | (prestg[359:345] & {15{(~ selnose[621])}})), (({StageIn[343:330], NumeratorIn[575]} & {15{selnose[594]}}) | (prestg[344:330] & {15{(~ selnose[594])}})), (({StageIn[328:315], NumeratorIn[550]} & {15{selnose[567]}}) | (prestg[329:315] & {15{(~ selnose[567])}})), (({StageIn[313:300], NumeratorIn[525]} & {15{selnose[540]}}) | (prestg[314:300] & {15{(~ selnose[540])}})), (({StageIn[298:285], NumeratorIn[500]} & {15{selnose[513]}}) | (prestg[299:285] & {15{(~ selnose[513])}})), (({StageIn[283:270], NumeratorIn[475]} & {15{selnose[486]}}) | (prestg[284:270] & {15{(~ selnose[486])}})), (({StageIn[268:255], NumeratorIn[450]} & {15{selnose[459]}}) | (prestg[269:255] & {15{(~ selnose[459])}})), (({StageIn[253:240], NumeratorIn[425]} & {15{selnose[432]}}) | (prestg[254:240] & {15{(~ selnose[432])}})), (({StageIn[238:225], NumeratorIn[400]} & {15{selnose[405]}}) | (prestg[239:225] & {15{(~ selnose[405])}})), (({StageIn[223:210], NumeratorIn[375]} & {15{selnose[378]}}) | (prestg[224:210] & {15{(~ selnose[378])}})), (({StageIn[208:195], NumeratorIn[350]} & {15{selnose[351]}}) | (prestg[209:195] & {15{(~ selnose[351])}})), (({StageIn[193:180], NumeratorIn[325]} & {15{selnose[324]}}) | (prestg[194:180] & {15{(~ selnose[324])}})), (({StageIn[178:165], NumeratorIn[300]} & {15{selnose[297]}}) | (prestg[179:165] & {15{(~ selnose[297])}})), (({StageIn[163:150], NumeratorIn[275]} & {15{selnose[270]}}) | (prestg[164:150] & {15{(~ selnose[270])}})), (({StageIn[148:135], NumeratorIn[250]} & {15{selnose[243]}}) | (prestg[149:135] & {15{(~ selnose[243])}})), (({StageIn[133:120], NumeratorIn[225]} & {15{selnose[216]}}) | (prestg[134:120] & {15{(~ selnose[216])}})), (({StageIn[118:105], NumeratorIn[200]} & {15{selnose[189]}}) | (prestg[119:105] & {15{(~ selnose[189]
)}})), (({StageIn[103:90], NumeratorIn[175]} & {15{selnose[162]}}) | (prestg[104:90] & {15{(~ selnose[162])}})), (({StageIn[88:75], NumeratorIn[150]} & {15{selnose[135]}}) | (prestg[89:75] & {15{(~ selnose[135])}})), (({StageIn[73:60], NumeratorIn[125]} & {15{selnose[108]}}) | (prestg[74:60] & {15{(~ selnose[108])}})), (({StageIn[58:45], NumeratorIn[100]} & {15{selnose[81]}}) | (prestg[59:45] & {15{(~ selnose[81])}})), (({StageIn[43:30], NumeratorIn[75]} & {15{selnose[54]}}) | (prestg[44:30] & {15{(~ selnose[54])}})), (({StageIn[28:15], NumeratorIn[50]} & {15{selnose[27]}}) | (prestg[29:15] & {15{(~ selnose[27])}})), (({StageIn[13:0], NumeratorIn[25]} & {15{selnose[0]}}) | (prestg[14:0] & {15{(~ selnose[0])}}))},
		vcc_wire = 1'b1;
endmodule //divider_alt_u_div

//synthesis_resources = lut 306 reg 162 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  divider_sign_div_unsign
	( 
	clock,
	denominator,
	numerator,
	quotient,
	remainder) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [13:0]  denominator;
	input   [25:0]  numerator;
	output   [25:0]  quotient;
	output   [13:0]  remainder;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [25:0]   wire_divider_quotient;
	wire  [13:0]   wire_divider_remainder;
	wire  [25:0]  norm_num;
	wire  [25:0]  protect_quotient;
	wire  [13:0]  protect_remainder;

	divider_alt_u_div   divider
	( 
	.clock(clock),
	.denominator(denominator),
	.numerator(norm_num),
	.quotient(wire_divider_quotient),
	.remainder(wire_divider_remainder));
	assign
		norm_num = numerator,
		protect_quotient = wire_divider_quotient,
		protect_remainder = wire_divider_remainder,
		quotient = protect_quotient,
		remainder = protect_remainder;
endmodule //divider_sign_div_unsign

//synthesis_resources = lut 306 reg 162 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  divider_lpm_divide
	( 
	clock,
	denom,
	numer,
	quotient,
	remain) /* synthesis synthesis_clearbox=1 */;
	input   clock;
	input   [13:0]  denom;
	input   [25:0]  numer;
	output   [25:0]  quotient;
	output   [13:0]  remain;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire  [25:0]   wire_divider_quotient;
	wire  [13:0]   wire_divider_remainder;
	wire  [25:0]  numer_tmp;

	divider_sign_div_unsign   divider
	( 
	.clock(clock),
	.denominator(denom),
	.numerator(numer_tmp),
	.quotient(wire_divider_quotient),
	.remainder(wire_divider_remainder));
	assign
		numer_tmp = numer,
		quotient = wire_divider_quotient,
		remain = wire_divider_remainder;
endmodule //divider_lpm_divide
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module divider (
	clock,
	denom,
	numer,
	quotient,
	remain)/* synthesis synthesis_clearbox = 1 */;

	input	  clock;
	input	[13:0]  denom;
	input	[25:0]  numer;
	output	[25:0]  quotient;
	output	[13:0]  remain;

	wire [25:0] sub_wire0;
	wire [13:0] sub_wire1;
	wire [25:0] quotient = sub_wire0[25:0];
	wire [13:0] remain = sub_wire1[13:0];

	divider_lpm_divide	divider_lpm_divide_component (
				.denom (denom),
				.clock (clock),
				.numer (numer),
				.quotient (sub_wire0),
				.remain (sub_wire1));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone II"
// Retrieval info: PRIVATE: PRIVATE_LPM_REMAINDERPOSITIVE STRING "TRUE"
// Retrieval info: PRIVATE: PRIVATE_MAXIMIZE_SPEED NUMERIC "6"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: USING_PIPELINE NUMERIC "1"
// Retrieval info: PRIVATE: VERSION_NUMBER NUMERIC "2"
// Retrieval info: CONSTANT: LPM_DREPRESENTATION STRING "UNSIGNED"
// Retrieval info: CONSTANT: LPM_HINT STRING "MAXIMIZE_SPEED=6,LPM_REMAINDERPOSITIVE=TRUE"
// Retrieval info: CONSTANT: LPM_NREPRESENTATION STRING "UNSIGNED"
// Retrieval info: CONSTANT: LPM_PIPELINE NUMERIC "2"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_DIVIDE"
// Retrieval info: CONSTANT: LPM_WIDTHD NUMERIC "14"
// Retrieval info: CONSTANT: LPM_WIDTHN NUMERIC "26"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL clock
// Retrieval info: USED_PORT: denom 0 0 14 0 INPUT NODEFVAL denom[13..0]
// Retrieval info: USED_PORT: numer 0 0 26 0 INPUT NODEFVAL numer[25..0]
// Retrieval info: USED_PORT: quotient 0 0 26 0 OUTPUT NODEFVAL quotient[25..0]
// Retrieval info: USED_PORT: remain 0 0 14 0 OUTPUT NODEFVAL remain[13..0]
// Retrieval info: CONNECT: @numer 0 0 26 0 numer 0 0 26 0
// Retrieval info: CONNECT: @denom 0 0 14 0 denom 0 0 14 0
// Retrieval info: CONNECT: quotient 0 0 26 0 @quotient 0 0 26 0
// Retrieval info: CONNECT: remain 0 0 14 0 @remain 0 0 14 0
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: GEN_FILE: TYPE_NORMAL divider.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL divider.inc FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL divider.cmp FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL divider.bsf FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL divider_inst.v FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL divider_bb.v FALSE
// Retrieval info: GEN_FILE: TYPE_NORMAL divider_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
